{"version":3,"sources":["components/MainTable.js","components/Pagination.js","components/Filter.js","components/EditWindow.js","App.js","util/flatUtil.js","store/reducers.js","store/middleware.js","store/store.js","index.js"],"names":["MainTable","props","dispatch","type","value","result","this","flats","flat","push","onClick","handleClick","id","_text","name","coordinates","x","y","creationDate","area","numberOfRooms","price","kitchenArea","view","house","Table","bordered","hover","className","scope","icon","filters","sort","faSort","faSortUp","faSortDown","date","rooms","filterName","mode","React","Component","connect","store","Pagination","totalPages","Math","ceil","totalFlats","pageSize","htmlFor","currentPage","min","max","onChange","e","handlePageUpdate","target","handleSizeUpdate","page","size","Filter","filter","updateFilter","applyChanges","EditWindow","Modal","centered","show","onHide","handleClose","Header","closeButton","Title","Body","Form","Row","Col","Group","Label","Control","handleChange","coords_x","coords_y","house_name","house_year","house_floors","house_flatsOnFloor","house_lifts","Footer","Button","variant","disabled","handleDelete","handleSubmit","field","fieldName","currentFlat","App","role","hidden","error","handleAdd","toXML","coords","house_id","fromFlat","year","numberOfFloors","numberOfFlatsOnFloor","numberOfLifts","mainReducer","state","action","flatList","Symbol","iterator","Object","assign","parseInt","prototype","hasOwnProperty","call","applySort","applyFilter","secondFilter","applyMiddleware","next","req","XMLHttpRequest","pagination","getState","order","open","DEFAULT_URL","onload","xml","status","responseText","convert","xml2js","compact","onerror","alert","send","setRequestHeader","createStore","reducers","middleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.255c347c.chunk.js","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faSort, faSortUp, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport Table from 'react-bootstrap/Table'\n\nclass MainTable extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.props.dispatch({type: \"LOAD_FLATS\", value: {}})\n    }\n\n    render() {\n        let result = [];\n        if (this.props.flats) {\n            for (let flat of this.props.flats) {\n                result.push(\n                    <tr onClick={() => this.handleClick(flat)}>\n                        <td>{flat.id._text}</td>\n                        <td>{flat.name._text}</td>\n                        <td>x={flat.coordinates.x._text}, y={flat.coordinates.y._text}</td>\n                        <td>{flat.creationDate._text}</td>\n                        <td>{flat.area ? flat.area._text : \"\"}</td>\n                        <td>{flat.numberOfRooms ? flat.numberOfRooms._text : \"\"}</td>\n                        <td>{flat.price ? flat.price._text : \"\"}</td>\n                        <td>{flat.kitchenArea ? flat.kitchenArea._text : \"\"}</td>\n                        <td>{flat.view ? flat.view._text : \"\"}</td>\n                        <td>{flat.house ? flat.house.name._text : \"\"}</td>\n                    </tr>\n                )\n            }\n        }\n        return (\n            <Table bordered hover>\n                <thead className=\"table-dark\">\n                <tr>\n                    <th scope=\"col\">ID <FontAwesomeIcon\n                        icon={this.props.filters.id.sort === 0 ? faSort : this.props.filters.id.sort === 1 ? faSortUp : faSortDown}\n                        onClick={() => this.sort(\"id\")}/></th>\n                    <th scope=\"col\">Name <FontAwesomeIcon\n                        icon={this.props.filters.name.sort === 0 ? faSort : this.props.filters.name.sort === 1 ? faSortUp : faSortDown}\n                        onClick={() => this.sort(\"name\")}/></th>\n                    <th scope=\"col\">Coordinates <FontAwesomeIcon\n                        icon={this.props.filters.coordinates.sort === 0 ? faSort : this.props.filters.coordinates.sort === 1 ? faSortUp : faSortDown}\n                        onClick={() => this.sort(\"coordinates\")}/></th>\n                    <th scope=\"col\">Creation Date <FontAwesomeIcon\n                        icon={this.props.filters.date.sort === 0 ? faSort : this.props.filters.date.sort === 1 ? faSortUp : faSortDown}\n                        onClick={() => this.sort(\"date\")}/></th>\n                    <th scope=\"col\">Area <FontAwesomeIcon\n                        icon={this.props.filters.area.sort === 0 ? faSort : this.props.filters.area.sort === 1 ? faSortUp : faSortDown}\n                        onClick={() => this.sort(\"area\")}/></th>\n                    <th scope=\"col\">Rooms <FontAwesomeIcon\n                        icon={this.props.filters.rooms.sort === 0 ? faSort : this.props.filters.rooms.sort === 1 ? faSortUp : faSortDown}\n                        onClick={() => this.sort(\"rooms\")}/></th>\n                    <th scope=\"col\">Price <FontAwesomeIcon\n                        icon={this.props.filters.price.sort === 0 ? faSort : this.props.filters.price.sort === 1 ? faSortUp : faSortDown}\n                        onClick={() => this.sort(\"price\")}/></th>\n                    <th scope=\"col\">Kitchen Area <FontAwesomeIcon\n                        icon={this.props.filters.kitchenArea.sort === 0 ? faSort : this.props.filters.kitchenArea.sort === 1 ? faSortUp : faSortDown}\n                        onClick={() => this.sort(\"kitchenArea\")}/></th>\n                    <th scope=\"col\">View <FontAwesomeIcon\n                        icon={this.props.filters.view.sort === 0 ? faSort : this.props.filters.view.sort === 1 ? faSortUp : faSortDown}\n                        onClick={() => this.sort(\"view\")}/></th>\n                    <th scope=\"col\">House <FontAwesomeIcon\n                        icon={this.props.filters.house.sort === 0 ? faSort : this.props.filters.house.sort === 1 ? faSortUp : faSortDown}\n                        onClick={() => this.sort(\"house\")}/></th>\n                </tr>\n                </thead>\n                <tbody>{result}</tbody>\n            </Table>\n        )\n    }\n\n    sort(filterName) {\n        this.props.dispatch({type: \"UPDATE_SORT\", value: {filterName: filterName}})\n        this.props.dispatch({type: \"LOAD_FLATS\", value: {}})\n    }\n\n    handleClick(flat) {\n        this.props.dispatch({type: \"UPDATE_CURRENT_FLAT\", value: {flat: flat}});\n        this.props.dispatch({type: \"SET_MODE\", value: {mode: 1}})\n    }\n}\n\nconst mapStateToProps = function (store) {\n    return {\n        flats: store.flats,\n        filters: store.filters\n    }\n};\n\nexport default connect(mapStateToProps)(MainTable);","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nclass Pagination extends React.Component {\n\n    render() {\n        let totalPages = Math.ceil(this.props.totalFlats / this.props.pageSize);\n        return (\n            <form className=\"my-page-form\">\n                <div className=\"row justify-content-md-center\">\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"pageNum\">Page number</label>\n                        <input type=\"number\" id=\"pageNum\" className=\"form-control\" value={this.props.currentPage}\n                               min=\"1\" max={totalPages} onChange={(e) => this.handlePageUpdate(e.target.value)}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"typeNumber\">Page size</label>\n                        <input type=\"number\" id=\"typeNumber\" className=\"form-control number\" value={this.props.pageSize}\n                               min=\"1\" max={this.props.totalFlats}\n                               onChange={(e) => this.handleSizeUpdate(e.target.value)}/>\n                    </div>\n                </div>\n                <br/>\n                <button className=\"btn btn-outline-primary\" type=\"button\"\n                        onClick={() => this.props.dispatch({type: \"LOAD_FLATS\", value: {}})}>Apply\n                </button>\n            </form>\n        )\n    }\n\n    handlePageUpdate(page) {\n        this.props.dispatch({type: \"UPDATE_CURRENT_PAGE\", value: {currentPage: page}})\n    }\n\n    handleSizeUpdate(size) {\n        this.props.dispatch({type: \"UPDATE_PAGE_SIZE\", value: {pageSize: size}})\n    }\n}\n\n\nconst mapStateToProps = function (store) {\n    return {\n        totalFlats: store.totalFlats,\n        currentPage: store.currentPage,\n        pageSize: store.pageSize\n    }\n};\n\nexport default connect(mapStateToProps)(Pagination);","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nclass Filter extends React.Component {\n    render() {\n        return (\n            <form>\n                <div className=\"row justify-content-md-center\">\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"id\">ID</label>\n                        <input type=\"number\" id=\"id\" className=\"form-control\" value={this.props.filters.id.filter}\n                               onChange={(e) => this.updateFilter(e, \"id\")}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"name\">Name</label>\n                        <input type=\"text\" id=\"name\" className=\"form-control\" value={this.props.filters.name.filter}\n                               onChange={(e) => this.updateFilter(e, \"name\")}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"x\">X</label>\n                        <input type=\"number\" id=\"x\" className=\"form-control\" value={this.props.filters.x.filter}\n                               onChange={(e) => this.updateFilter(e, \"x\")}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"y\">Y</label>\n                        <input type=\"number\" id=\"y\" className=\"form-control\" value={this.props.filters.y.filter}\n                               onChange={(e) => this.updateFilter(e, \"y\")}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"date\">Date</label>\n                        <input type=\"text\" id=\"date\" className=\"form-control\" value={this.props.filters.date.filter}\n                               onChange={(e) => this.updateFilter(e, \"date\")}/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-md-center\">\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"area\">Area</label>\n                        <input type=\"number\" id=\"area\" className=\"form-control\" value={this.props.filters.area.filter}\n                               onChange={(e) => this.updateFilter(e, \"area\")}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"rooms\">Rooms</label>\n                        <input type=\"number\" id=\"rooms\" className=\"form-control\" value={this.props.filters.rooms.filter}\n                               onChange={(e) => this.updateFilter(e, \"rooms\")}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"price\">Price</label>\n                        <input type=\"number\" id=\"price\" className=\"form-control\" value={this.props.filters.price.filter}\n                               onChange={(e) => this.updateFilter(e, \"price\")}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"kitchenArea\">Kitchen Area</label>\n                        <input type=\"number\" id=\"kitchenArea\" className=\"form-control\"\n                               value={this.props.filters.kitchenArea.filter}\n                               onChange={(e) => this.updateFilter(e, \"kitchenArea\")}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"form-label\" htmlFor=\"view\">View</label>\n                        <input type=\"text\" id=\"view\" className=\"form-control\" value={this.props.filters.view.filter}\n                               onChange={(e) => this.updateFilter(e, \"view\")}/>\n                    </div>\n                </div>\n                <div className=\"col-auto\">\n                    <br/>\n                    <button type=\"button\" className=\"btn btn-outline-primary\"\n                            onClick={() => this.applyChanges()}>Apply\n                    </button>\n                </div>\n            </form>\n        )\n    }\n\n    updateFilter(e, name) {\n        this.props.dispatch({type: \"UPDATE_FILTER\", value: {filterName: name, value: e.target.value}})\n    }\n\n    applyChanges() {\n        this.props.dispatch({type: \"UPDATE_CURRENT_PAGE\", value: {currentPage: 1}})\n        this.props.dispatch({type: \"LOAD_FLATS\", value: {}})\n    }\n}\n\nconst mapStateToProps = function (store) {\n    return {\n        filters: store.filters\n    }\n};\n\nexport default connect(mapStateToProps)(Filter);","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Modal from 'react-bootstrap/Modal'\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\n\nclass EditWindow extends React.Component {\n    render() {\n        return (\n            <Modal centered show={this.props.mode !== 0} onHide={() => this.handleClose()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{this.props.mode === 2 ? \"Add flat\" : `Modify flat ${this.props.flat.id}`}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control type=\"text\" value={this.props.flat.name}\n                                                  onChange={(e) => this.handleChange(e, \"name\")}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Area</Form.Label>\n                                    <Form.Control type=\"number\" value={this.props.flat.area}\n                                                  onChange={(e) => this.handleChange(e, \"area\")}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>X coordinate</Form.Label>\n                                    <Form.Control type=\"number\" value={this.props.flat.coords_x}\n                                                  onChange={(e) => this.handleChange(e, \"coords_x\")}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Y coordinate</Form.Label>\n                                    <Form.Control type=\"number\" value={this.props.flat.coords_y}\n                                                  onChange={(e) => this.handleChange(e, \"coords_y\")}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Rooms</Form.Label>\n                                    <Form.Control type=\"number\" value={this.props.flat.rooms}\n                                                  onChange={(e) => this.handleChange(e, \"rooms\")}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Price</Form.Label>\n                                    <Form.Control type=\"number\" value={this.props.flat.price}\n                                                  onChange={(e) => this.handleChange(e, \"price\")}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Kitchen Area</Form.Label>\n                                    <Form.Control type=\"number\" value={this.props.flat.kitchenArea}\n                                                  onChange={(e) => this.handleChange(e, \"kitchenArea\")}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>View</Form.Label>\n                                    <Form.Control type=\"text\" value={this.props.flat.view}\n                                                  onChange={(e) => this.handleChange(e, \"view\")}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>House Name</Form.Label>\n                                    <Form.Control type=\"text\" value={this.props.flat.house_name}\n                                                  onChange={(e) => this.handleChange(e, \"house_name\")}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>House Year</Form.Label>\n                                    <Form.Control type=\"number\" value={this.props.flat.house_year}\n                                                  onChange={(e) => {\n                                                      this.handleChange(e, \"house_year\")\n                                                  }}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>House Floors</Form.Label>\n                                    <Form.Control type=\"number\" value={this.props.flat.house_floors}\n                                                  onChange={(e) => this.handleChange(e, \"house_floors\")}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>House FlatsOnFloor</Form.Label>\n                                    <Form.Control type=\"number\" value={this.props.flat.house_flatsOnFloor}\n                                                  onChange={(e) => {\n                                                      this.handleChange(e, \"house_flatsOnFloor\")\n                                                  }}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>House Lifts</Form.Label>\n                                    <Form.Control type=\"number\" value={this.props.flat.house_lifts}\n                                                  onChange={(e) => this.handleChange(e, \"house_lifts\")}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" disabled={this.props.mode !== 1} onClick={() => this.handleDelete()}>\n                        Delete\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n\n    handleClose() {\n        this.props.dispatch({type: \"SET_MODE\", value: {mode: 0}})\n    }\n\n    handleSubmit() {\n        if (this.props.mode === 1) {\n            this.props.dispatch({type: \"UPDATE_FLAT\"})\n        }\n        if (this.props.mode === 2) {\n            this.props.dispatch({type: \"ADD_FLAT\"})\n        }\n        this.props.dispatch({type: \"SET_MODE\", value: {mode: 0}})\n    }\n\n    handleDelete() {\n        this.props.dispatch({type: \"DELETE_FLAT\"})\n        this.props.dispatch({type: \"SET_MODE\", value: {mode: 0}})\n    }\n\n    handleChange(e, field) {\n        let mode = this.props.mode;\n        this.props.dispatch({type: \"SET_MODE\", value: {mode: 0}})\n        this.props.dispatch({type: \"UPDATE_CURRENT_FLAT_FIELD\", value: {fieldName: field, value: e.target.value}});\n        this.props.dispatch({type: \"SET_MODE\", value: {mode: mode}})\n    }\n}\n\nconst mapStateToProps = function (store) {\n    return {\n        mode: store.mode,\n        flat: store.currentFlat\n    }\n};\n\nexport default connect(mapStateToProps)(EditWindow);","import './App.css';\nimport React from \"react\";\nimport MainTable from \"./components/MainTable\";\nimport Pagination from \"./components/Pagination\";\nimport {connect} from \"react-redux\";\nimport Filter from \"./components/Filter\";\nimport EditWindow from \"./components/EditWindow\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"alert alert-danger\" role=\"alert\" hidden={!this.props.error}>\n                    {this.props.error}\n                </div>\n                <EditWindow store={this.props.store}/>\n                <div className=\"pt-2 mt-2\">\n                    <Filter store={this.props.store}/><br/>\n                </div>\n                <MainTable store={this.props.store}/>\n                <button className=\"btn btn-success\" onClick={() => this.handleAdd()}>Add flat</button>\n                <Pagination store={this.props.store}/>\n            </div>\n        );\n    }\n\n    handleAdd() {\n        this.props.dispatch({type: \"CLEAR_CURRENT_FLAT\"})\n        this.props.dispatch({type: \"SET_MODE\", value: {mode: 2}})\n    }\n}\n\nconst mapStateToProps = function (store) {\n    return {\n        error: store.error,\n    }\n};\n\nexport default connect(mapStateToProps)(App);\n","import convert from \"xml-js\";\n\nexport function fromXML(xml) {\n    return convert.xml2js(xml, {compact: true})\n}\n\nexport function toXML(flat) {\n    let result = \"\";\n    if (flat.name) result += `<name>${flat.name}</name>`;\n    if (flat.area) result += `<area>${flat.area}</area>`;\n    if (flat.rooms) result += `<numberOfRooms>${flat.rooms}</numberOfRooms>`;\n    if (flat.price) result += `<price>${flat.price}</price>`;\n    if (flat.kitchenArea) result += `<kitchenArea>${flat.kitchenArea}</kitchenArea>`;\n    if (flat.view) result += `<view>${flat.view}</view>`;\n    if (flat.coords_x || flat.coords_y) {\n        let coords = \"\";\n        if (flat.coords_x) coords += `<x>${flat.coords_x}</x>`\n        if (flat.coords_y) coords += `<y>${flat.coords_y}</y>`\n        result += `<coordinates>${coords}</coordinates>`\n    }\n    if (flat.house_id || flat.house_name || flat.house_year || flat.house_floors || flat.house_flatsOnFloor || flat.house_lifts) {\n        let house = \"\";\n        if (flat.house_id) house += `<id>${flat.house_id}</id>`\n        if (flat.house_name) house += `<name>${flat.house_name}</name>`\n        if (flat.house_year) house += `<year>${flat.house_year}</year>`\n        if (flat.house_floors) house += `<numberOfFloors>${flat.house_floors}</numberOfFloors>`\n        if (flat.house_flatsOnFloor) house += `<numberOfFlatsOnFloor>${flat.house_flatsOnFloor}</numberOfFlatsOnFloor>`\n        if (flat.house_lifts) house += `<numberOfLifts>${flat.house_lifts}</numberOfLifts>`\n        result += `<house>${house}</house>`\n    }\n    return `<flat>${result}</flat>`\n}\n\nexport function fromFlat(flat) {\n    return {\n        id: flat.id._text,\n        name: flat.name._text,\n        coords_x: flat.coordinates.x._text,\n        coords_y: flat.coordinates.y._text,\n        date: flat.creationDate._text,\n\n        area: flat.area ? flat.area._text : \"\",\n        rooms: flat.numberOfRooms ? flat.numberOfRooms._text : \"\",\n        price: flat.price ? flat.price._text : \"\",\n        kitchenArea: flat.kitchenArea ? flat.kitchenArea._text : \"\",\n        view: flat.view ? flat.view._text : \"\",\n\n        house_id: flat.house.id._text,\n        house_name: flat.house.name._text,\n\n        house_year: flat.house && flat.house.year ? flat.house.year._text : \"\",\n        house_floors: flat.house && flat.house.numberOfFloors ? flat.house.numberOfFloors._text : \"\",\n        house_flatsOnFloor: flat.house && flat.house.numberOfFlatsOnFloor ? flat.house.numberOfFlatsOnFloor._text : \"\",\n        house_lifts: flat.house && flat.house.numberOfLifts ? flat.house.numberOfLifts._text : \"\"\n    }\n}","import {fromFlat} from \"../util/flatUtil\";\n\nconst mainReducer = (state = {}, action) => {\n    switch (action.type) {\n        case (\"UPDATE_FLATS\"): {\n            let result = [];\n            let flat = action.value.flatList.flat;\n            if (flat && typeof flat[Symbol.iterator] === 'function') {\n                result = flat;\n            } else if (flat) {\n                result.push(flat);\n            }\n            return Object.assign({}, state, {\n                flats: result,\n                totalFlats: parseInt(action.value.flatList.totalFlats._text)\n            });\n        }\n        case (\"UPDATE_CURRENT_PAGE\"): {\n            return Object.assign({}, state, {currentPage: action.value.currentPage})\n        }\n        case (\"UPDATE_PAGE_SIZE\"): {\n            return Object.assign({}, state, {pageSize: action.value.pageSize})\n        }\n        case (\"UPDATE_SORT\"): {\n            let filters = state.filters;\n            filters[action.value.filterName].sort = (filters[action.value.filterName].sort + 1) % 3;\n            return Object.assign({}, state, {filters: filters})\n        }\n        case (\"UPDATE_FILTER\"): {\n            let filters = state.filters;\n            filters[action.value.filterName].filter = action.value.value;\n            return Object.assign({}, state, {filters: filters})\n        }\n        case (\"UPDATE_CURRENT_FLAT_FIELD\"): {\n            let flat = state.currentFlat;\n            flat[action.value.fieldName] = action.value.value;\n            return Object.assign({}, state, {currentFlat: flat})\n        }\n        case (\"UPDATE_CURRENT_FLAT\"): {\n            return Object.assign({}, state, {currentFlat: fromFlat(action.value.flat)})\n        }\n        case (\"CLEAR_CURRENT_FLAT\"): {\n            let flat = state.currentFlat;\n            for (let field in flat) {\n                if (Object.prototype.hasOwnProperty.call(flat, field)) {\n                    flat[field] = \"\";\n                }\n            }\n            return Object.assign({}, state, {currentFlat: flat})\n        }\n        case (\"SET_ERROR\"): {\n            return Object.assign({}, state, {error: action.value.error})\n        }\n        case (\"SET_MODE\"): {\n            return Object.assign({}, state, {mode: action.value.mode})\n        }\n        default:\n            return state;\n    }\n}\n\nexport default mainReducer","import {DEFAULT_URL} from '../index'\nimport {applyMiddleware} from \"redux\";\nimport {fromXML, toXML} from \"../util/flatUtil\";\n\nconst mainMiddleware = store => next => action => {\n    switch (action.type) {\n        case(\"LOAD_FLATS\"): {\n            let req = new XMLHttpRequest();\n            //pagination\n            let pagination = `pageNumber=${store.getState().currentPage}&pageSize=${store.getState().pageSize}`;\n            //sorting\n            let order = \"\";\n            order = applySort(store.getState().filters.id, \"id\", order);\n            order = applySort(store.getState().filters.name, \"name\", order);\n            order = applySort(store.getState().filters.coordinates, \"coordinates\", order);\n            order = applySort(store.getState().filters.date, \"creationDate\", order);\n            order = applySort(store.getState().filters.area, \"area\", order);\n            order = applySort(store.getState().filters.rooms, \"numberOfRooms\", order);\n            order = applySort(store.getState().filters.price, \"price\", order);\n            order = applySort(store.getState().filters.kitchenArea, \"kitchenArea\", order);\n            order = applySort(store.getState().filters.view, \"view\", order);\n            order = applySort(store.getState().filters.house, \"house\", order);\n            //filtering\n            order = applyFilter(store.getState().filters.id, \"id\", order);\n            order = applyFilter(store.getState().filters.name, \"name\", order);\n            order = applyFilter(store.getState().filters.x, \"coordinates\", order, store.getState().filters.y);\n            order = applyFilter(store.getState().filters.date, \"creationDate\", order);\n            order = applyFilter(store.getState().filters.area, \"area\", order);\n            order = applyFilter(store.getState().filters.rooms, \"numberOfRooms\", order);\n            order = applyFilter(store.getState().filters.price, \"price\", order);\n            order = applyFilter(store.getState().filters.kitchenArea, \"kitchenArea\", order);\n            order = applyFilter(store.getState().filters.view, \"view\", order);\n            order = applyFilter(store.getState().filters.house, \"house\", order);\n            req.open(\"GET\", `${DEFAULT_URL}/flats?${pagination}${order}`, false);\n            req.onload = () => {\n                if (req.status === 200) {\n                    store.dispatch({type: \"UPDATE_FLATS\", value: fromXML(req.responseText)})\n                    store.dispatch({type: \"SET_ERROR\", value: {error: null}})\n                } else {\n                    store.dispatch({type: \"SET_ERROR\", value: {error: req.responseText}})\n                }\n            };\n            req.onerror = () => alert(\"Server is unavailable\");\n            req.send();\n            return next(action)\n        }\n        case(\"UPDATE_FLAT\"): {\n            let req = new XMLHttpRequest();\n            req.open(\"PUT\", `${DEFAULT_URL}/flats/${store.getState().currentFlat.id}`, false);\n            req.onload = () => {\n                if (req.status === 200) {\n                    store.dispatch({type: \"LOAD_FLATS\"})\n                } else {\n                    store.dispatch({type: \"SET_ERROR\", value: {error: req.responseText}})\n                }\n            };\n            req.onerror = () => alert(\"Server is unavailable\");\n            req.setRequestHeader(\"content-type\", \"text/xml\")\n            req.send(toXML(store.getState().currentFlat));\n            return next(action)\n        }\n        case(\"DELETE_FLAT\"): {\n            let req = new XMLHttpRequest();\n            req.open(\"DELETE\", `${DEFAULT_URL}/flats/${store.getState().currentFlat.id}`, false);\n            req.onload = () => {\n                if (req.status === 200) {\n                    store.dispatch({type: \"LOAD_FLATS\"})\n                } else {\n                    store.dispatch({type: \"SET_ERROR\", value: {error: req.responseText}})\n                }\n            };\n            req.onerror = () => alert(\"Server is unavailable\");\n            req.send();\n            return next(action)\n        }\n        case(\"ADD_FLAT\"): {\n            let req = new XMLHttpRequest();\n            req.open(\"POST\", `${DEFAULT_URL}/flats`, false);\n            req.onload = () => {\n                if (req.status === 200) {\n                    store.dispatch({type: \"LOAD_FLATS\"})\n                } else {\n                    store.dispatch({type: \"SET_ERROR\", value: {error: req.responseText}})\n                }\n            };\n            req.onerror = () => alert(\"Server is unavailable\");\n            req.send(toXML(store.getState().currentFlat));\n            return next(action)\n        }\n        default: {\n            return next(action)\n        }\n\n    }\n}\n\nfunction applySort(filter, name, result) {\n    if (filter.sort !== 0) {\n        return result + `&orderBy=${name},${filter.sort === 1 ? \"asc\" : \"desc\"}`;\n    } else return result;\n}\n\nfunction applyFilter(filter, name, result, secondFilter = null) {\n    if (filter.filter) {\n        if (secondFilter) {\n            return result + `&${name}=${filter.filter},${secondFilter.filter}`;\n        } else return result + `&${name}=${filter.filter}`;\n    } else return result;\n}\n\nexport default applyMiddleware(mainMiddleware)","import {createStore} from 'redux';\nimport reducers from './reducers';\nimport middleware from \"./middleware\";\n\nconst initialState = {\n    flats: [],\n    totalFlats: 0,\n    currentPage: 1,\n    pageSize: 5,\n    error: null,\n    mode: 0,\n    currentFlat:\n        {\n            id: \"\",\n            name: \"\",\n            coords_x: \"\",\n            coords_y: \"\",\n            date: \"\",\n            area: \"\",\n            rooms: \"\",\n            price: \"\",\n            kitchenArea: \"\",\n            view: \"\",\n            house_id: \"\",\n            house_name: \"\",\n            house_year: \"\",\n            house_floors: \"\",\n            house_flatsOnFloor: \"\",\n            house_lifts: \"\"\n        },\n    filters:\n        {\n            id: {filter: null, sort: 0},\n            name: {filter: null, sort: 0},\n            coordinates: {filter: null, sort: 0},\n            x: {filter: null, sort: 0},\n            y: {filter: null, sort: 0},\n            date: {filter: null, sort: 0},\n            area: {filter: null, sort: 0},\n            rooms: {filter: null, sort: 0},\n            price: {filter: null, sort: 0},\n            kitchenArea: {filter: null, sort: 0},\n            view: {filter: null, sort: 0},\n            house: {filter: null, sort: 0}\n        }\n}\n\nexport default createStore(reducers, initialState, middleware);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from \"./store/store\";\n\nexport const DEFAULT_URL = \"http://localhost:20080/soa_lab1_back-1.0-SNAPSHOT/api\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}